name: Deploy Workers

on:
  push:
    branches: [main]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.changes }}
    steps:
      - uses: actions/checkout@v4

      - name: Check for worker changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            op-api:
              - 'workers/op-api/**'
            root-api:
              - 'workers/root-api/**'

  deploy:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        worker: ${{ fromJSON(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build worker
        run: pnpm turbo build --filter=@keepr/${{ matrix.worker }}

      - name: Deploy worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: ./workers/${{ matrix.worker }}
          command: deploy
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
